"""add_missing_uuid_columns

Revision ID: 0dd603d88f6e
Revises: 7216858f0a04
Create Date: 2025-07-02 21:08:13.538392

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0dd603d88f6e'
down_revision = '7216858f0a04'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('ai_generated_content', sa.Column('uuid', sa.UUID(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('adaptation_id', sa.Integer(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('selection_criteria', sa.JSON(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('selection_score', sa.Float(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('alternatives_considered', sa.JSON(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('language_requested', sa.String(length=10), nullable=True))
    op.add_column('ai_generated_content', sa.Column('cultural_region', sa.String(length=50), nullable=True))
    op.add_column('ai_generated_content', sa.Column('context_tags', sa.JSON(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('target_audience', sa.String(length=100), nullable=True))
    op.add_column('ai_generated_content', sa.Column('custom_variables', sa.JSON(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('top_p', sa.Float(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('frequency_penalty', sa.Float(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('presence_penalty', sa.Float(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('generation_config', sa.JSON(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('adaptations_applied', sa.JSON(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('post_processing_applied', sa.JSON(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('prompt_tokens', sa.Integer(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('completion_tokens', sa.Integer(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('total_tokens', sa.Integer(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('cost_estimate', sa.Float(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('error_type', sa.String(length=50), nullable=True))
    op.add_column('ai_generated_content', sa.Column('content_quality_score', sa.Float(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('uniqueness_score', sa.Float(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('relevance_score', sa.Float(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('coherence_score', sa.Float(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('creativity_score', sa.Float(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('user_id', sa.String(length=100), nullable=True))
    op.add_column('ai_generated_content', sa.Column('user_agent', sa.String(length=500), nullable=True))
    op.add_column('ai_generated_content', sa.Column('ip_address', sa.String(length=45), nullable=True))
    op.add_column('ai_generated_content', sa.Column('conversion_tracked', sa.Boolean(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('converted', sa.Boolean(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('conversion_value', sa.Float(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('time_to_conversion', sa.Integer(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('ab_test_group', sa.String(length=50), nullable=True))
    op.add_column('ai_generated_content', sa.Column('ab_test_variant', sa.String(length=50), nullable=True))
    op.add_column('ai_generated_content', sa.Column('ab_test_experiment_id', sa.String(length=100), nullable=True))
    op.add_column('ai_generated_content', sa.Column('sentiment_score', sa.Float(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('readability_score', sa.Float(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('complexity_score', sa.Float(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('keyword_density', sa.JSON(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('content_categories', sa.JSON(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('flagged_content', sa.Boolean(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('flag_reasons', sa.JSON(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('reviewed_by_human', sa.Boolean(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('human_reviewer', sa.String(length=100), nullable=True))
    op.add_column('ai_generated_content', sa.Column('review_notes', sa.Text(), nullable=True))
    op.add_column('ai_generated_content', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('ai_generated_content', sa.Column('reviewed_at', sa.DateTime(timezone=True), nullable=True))
    op.execute("ALTER TABLE ai_generated_content ALTER COLUMN temperature TYPE FLOAT USING CASE WHEN temperature = '' OR temperature IS NULL THEN NULL ELSE temperature::FLOAT END")
    op.create_index(op.f('ix_ai_generated_content_cultural_region'), 'ai_generated_content', ['cultural_region'], unique=False)
    op.create_index(op.f('ix_ai_generated_content_language_requested'), 'ai_generated_content', ['language_requested'], unique=False)
    op.create_index(op.f('ix_ai_generated_content_session_id'), 'ai_generated_content', ['session_id'], unique=False)
    op.create_index(op.f('ix_ai_generated_content_success'), 'ai_generated_content', ['success'], unique=False)
    op.create_index(op.f('ix_ai_generated_content_uuid'), 'ai_generated_content', ['uuid'], unique=True)
    op.create_index('ix_generation_ab_test', 'ai_generated_content', ['ab_test_group', 'ab_test_variant'], unique=False)
    op.create_index('ix_generation_language_region', 'ai_generated_content', ['language_requested', 'cultural_region'], unique=False)
    op.create_index('ix_generation_performance', 'ai_generated_content', ['content_quality_score', 'user_rating'], unique=False)
    op.create_index('ix_generation_template_success', 'ai_generated_content', ['template_id', 'success', 'created_at'], unique=False)
    op.create_index('ix_generation_user_session', 'ai_generated_content', ['user_id', 'session_id'], unique=False)
    op.create_foreign_key(op.f('fk_ai_generated_content_adaptation_id_cultural_adaptations'), 'ai_generated_content', 'cultural_adaptations', ['adaptation_id'], ['id'])
    op.create_foreign_key(op.f('fk_ai_generated_content_template_id_prompt_templates'), 'ai_generated_content', 'prompt_templates', ['template_id'], ['id'])
    op.drop_column('ai_generated_content', 'quality_score')
    op.add_column('content_generation_stats', sa.Column('success_rate', sa.Float(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('provider_usage', sa.JSON(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('provider_performance', sa.JSON(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('provider_costs', sa.JSON(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('content_type_breakdown', sa.JSON(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('content_type_performance', sa.JSON(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('language_breakdown', sa.JSON(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('region_breakdown', sa.JSON(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('language_performance', sa.JSON(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('median_generation_time_ms', sa.Float(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('p95_generation_time_ms', sa.Float(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('total_tokens_used', sa.Integer(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('avg_tokens_per_generation', sa.Float(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('total_cost_usd', sa.Float(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('avg_cost_per_generation', sa.Float(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('cost_efficiency_score', sa.Float(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('conversion_rate', sa.Float(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('total_conversion_value', sa.Float(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('revenue_per_generation', sa.Float(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('unique_users', sa.Integer(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('unique_sessions', sa.Integer(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('avg_generations_per_user', sa.Float(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('user_retention_rate', sa.Float(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('content_flagged_count', sa.Integer(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('content_flagged_rate', sa.Float(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('avg_uniqueness_score', sa.Float(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('avg_relevance_score', sa.Float(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('avg_coherence_score', sa.Float(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('system_uptime_percentage', sa.Float(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('avg_system_response_time', sa.Float(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('error_rate_by_type', sa.JSON(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('capacity_utilization', sa.Float(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('trend_analysis', sa.JSON(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('performance_insights', sa.JSON(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('anomalies_detected', sa.JSON(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('optimization_opportunities', sa.JSON(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('period_over_period_change', sa.JSON(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('year_over_year_change', sa.JSON(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('benchmark_comparison', sa.JSON(), nullable=True))
    op.add_column('content_generation_stats', sa.Column('last_calculated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.alter_column('content_generation_stats', 'avg_generation_time_ms',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               existing_nullable=True)
    # Use raw SQL to handle type conversion with USING clause
    op.execute("ALTER TABLE content_generation_stats ALTER COLUMN avg_quality_score TYPE FLOAT USING CASE WHEN avg_quality_score = '' OR avg_quality_score IS NULL THEN NULL ELSE avg_quality_score::FLOAT END")
    op.execute("ALTER TABLE content_generation_stats ALTER COLUMN avg_user_rating TYPE FLOAT USING CASE WHEN avg_user_rating = '' OR avg_user_rating IS NULL THEN NULL ELSE avg_user_rating::FLOAT END")
    op.create_index(op.f('ix_content_generation_stats_period_type'), 'content_generation_stats', ['period_type'], unique=False)
    op.create_index('ix_stats_date_period', 'content_generation_stats', ['date', 'period_type'], unique=False)
    op.create_index('ix_stats_performance', 'content_generation_stats', ['success_rate', 'avg_quality_score'], unique=False)
    op.create_unique_constraint('uq_stats_date_period', 'content_generation_stats', ['date', 'period_type'])
    op.drop_column('content_generation_stats', 'faqs_generated')
    op.drop_column('content_generation_stats', 'product_descriptions')
    op.drop_column('content_generation_stats', 'deepseek_usage')
    op.drop_column('content_generation_stats', 'openai_usage')
    op.drop_column('content_generation_stats', 'comparisons_generated')
    op.add_column('prompt_templates', sa.Column('uuid', sa.UUID(), nullable=True))
    op.add_column('prompt_templates', sa.Column('category', sa.String(length=100), nullable=True))
    op.add_column('prompt_templates', sa.Column('primary_language', sa.String(length=10), nullable=True))
    op.add_column('prompt_templates', sa.Column('supported_languages', sa.JSON(), nullable=True))
    op.add_column('prompt_templates', sa.Column('cultural_regions', sa.JSON(), nullable=True))
    op.add_column('prompt_templates', sa.Column('localization_notes', sa.Text(), nullable=True))
    op.add_column('prompt_templates', sa.Column('context_tags', sa.JSON(), nullable=True))
    op.add_column('prompt_templates', sa.Column('target_audience', sa.String(length=100), nullable=True))
    op.add_column('prompt_templates', sa.Column('product_categories', sa.JSON(), nullable=True))
    op.add_column('prompt_templates', sa.Column('price_ranges', sa.JSON(), nullable=True))
    op.add_column('prompt_templates', sa.Column('brand_personalities', sa.JSON(), nullable=True))
    op.add_column('prompt_templates', sa.Column('tone', sa.String(length=50), nullable=True))
    op.add_column('prompt_templates', sa.Column('urgency_level', sa.String(length=20), nullable=True))
    op.add_column('prompt_templates', sa.Column('personalization_level', sa.String(length=20), nullable=True))
    op.add_column('prompt_templates', sa.Column('content_style', sa.String(length=50), nullable=True))
    op.add_column('prompt_templates', sa.Column('default_top_p', sa.Float(), nullable=True))
    op.add_column('prompt_templates', sa.Column('default_frequency_penalty', sa.Float(), nullable=True))
    op.add_column('prompt_templates', sa.Column('default_presence_penalty', sa.Float(), nullable=True))
    op.add_column('prompt_templates', sa.Column('provider_preferences', sa.JSON(), nullable=True))
    op.add_column('prompt_templates', sa.Column('variable_types', sa.JSON(), nullable=True))
    op.add_column('prompt_templates', sa.Column('validation_rules', sa.JSON(), nullable=True))
    op.add_column('prompt_templates', sa.Column('content_guidelines', sa.JSON(), nullable=True))
    op.add_column('prompt_templates', sa.Column('output_format', sa.String(length=50), nullable=True))
    op.add_column('prompt_templates', sa.Column('max_output_length', sa.Integer(), nullable=True))
    op.add_column('prompt_templates', sa.Column('min_output_length', sa.Integer(), nullable=True))
    op.add_column('prompt_templates', sa.Column('prohibited_terms', sa.JSON(), nullable=True))
    op.add_column('prompt_templates', sa.Column('required_elements', sa.JSON(), nullable=True))
    op.add_column('prompt_templates', sa.Column('average_generation_time', sa.Float(), nullable=True))
    op.add_column('prompt_templates', sa.Column('average_user_rating', sa.Float(), nullable=True))
    op.add_column('prompt_templates', sa.Column('conversion_rate', sa.Float(), nullable=True))
    op.add_column('prompt_templates', sa.Column('cost_per_generation', sa.Float(), nullable=True))
    op.add_column('prompt_templates', sa.Column('content_quality_score', sa.Float(), nullable=True))
    op.add_column('prompt_templates', sa.Column('uniqueness_score', sa.Float(), nullable=True))
    op.add_column('prompt_templates', sa.Column('relevance_score', sa.Float(), nullable=True))
    op.add_column('prompt_templates', sa.Column('coherence_score', sa.Float(), nullable=True))
    op.add_column('prompt_templates', sa.Column('ab_test_group', sa.String(length=50), nullable=True))
    op.add_column('prompt_templates', sa.Column('ab_test_weight', sa.Float(), nullable=True))
    op.add_column('prompt_templates', sa.Column('ab_test_start_date', sa.DateTime(timezone=True), nullable=True))
    op.add_column('prompt_templates', sa.Column('ab_test_end_date', sa.DateTime(timezone=True), nullable=True))
    op.add_column('prompt_templates', sa.Column('ab_test_results', sa.JSON(), nullable=True))
    op.add_column('prompt_templates', sa.Column('is_experimental', sa.Boolean(), nullable=True))
    op.add_column('prompt_templates', sa.Column('visibility', sa.String(length=20), nullable=True))
    op.add_column('prompt_templates', sa.Column('parent_template_id', sa.Integer(), nullable=True))
    op.add_column('prompt_templates', sa.Column('optimization_status', sa.String(length=20), nullable=True))
    op.add_column('prompt_templates', sa.Column('optimization_score', sa.Float(), nullable=True))
    op.add_column('prompt_templates', sa.Column('last_optimization_date', sa.DateTime(timezone=True), nullable=True))
    op.add_column('prompt_templates', sa.Column('optimization_notes', sa.Text(), nullable=True))
    op.add_column('prompt_templates', sa.Column('access_roles', sa.JSON(), nullable=True))
    op.add_column('prompt_templates', sa.Column('collaboration_notes', sa.Text(), nullable=True))
    op.add_column('prompt_templates', sa.Column('review_status', sa.String(length=20), nullable=True))
    op.add_column('prompt_templates', sa.Column('reviewed_by', sa.String(length=100), nullable=True))
    op.add_column('prompt_templates', sa.Column('review_date', sa.DateTime(timezone=True), nullable=True))
    op.add_column('prompt_templates', sa.Column('tags', sa.JSON(), nullable=True))
    op.add_column('prompt_templates', sa.Column('template_metadata', sa.JSON(), nullable=True))
    op.add_column('prompt_templates', sa.Column('documentation_url', sa.String(length=500), nullable=True))
    op.add_column('prompt_templates', sa.Column('changelog', sa.JSON(), nullable=True))
    op.add_column('prompt_templates', sa.Column('performance_insights', sa.JSON(), nullable=True))
    op.add_column('prompt_templates', sa.Column('usage_patterns', sa.JSON(), nullable=True))
    op.add_column('prompt_templates', sa.Column('optimization_suggestions', sa.JSON(), nullable=True))
    op.add_column('prompt_templates', sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True))
    # Use raw SQL to handle type conversion with USING clause
    op.execute("ALTER TABLE prompt_templates ALTER COLUMN default_temperature TYPE FLOAT USING CASE WHEN default_temperature = '' OR default_temperature IS NULL THEN NULL ELSE default_temperature::FLOAT END")
    op.execute("ALTER TABLE prompt_templates ALTER COLUMN success_rate TYPE FLOAT USING CASE WHEN success_rate = '' OR success_rate IS NULL THEN NULL ELSE success_rate::FLOAT END")
    op.create_index(op.f('ix_prompt_templates_category'), 'prompt_templates', ['category'], unique=False)
    op.create_index(op.f('ix_prompt_templates_is_active'), 'prompt_templates', ['is_active'], unique=False)
    op.create_index(op.f('ix_prompt_templates_primary_language'), 'prompt_templates', ['primary_language'], unique=False)
    op.create_index(op.f('ix_prompt_templates_uuid'), 'prompt_templates', ['uuid'], unique=True)
    op.create_index('ix_template_ab_test', 'prompt_templates', ['ab_test_group', 'is_active'], unique=False)
    op.create_index('ix_template_active_category', 'prompt_templates', ['is_active', 'category'], unique=False)
    op.create_index('ix_template_performance', 'prompt_templates', ['success_rate', 'average_user_rating'], unique=False)
    op.create_index('ix_template_type_language', 'prompt_templates', ['template_type', 'primary_language'], unique=False)
    op.create_unique_constraint('uq_template_name_version', 'prompt_templates', ['template_type', 'name', 'version'])
    op.create_foreign_key(op.f('fk_prompt_templates_parent_template_id_prompt_templates'), 'prompt_templates', 'prompt_templates', ['parent_template_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk_prompt_templates_parent_template_id_prompt_templates'), 'prompt_templates', type_='foreignkey')
    op.drop_constraint('uq_template_name_version', 'prompt_templates', type_='unique')
    op.drop_index('ix_template_type_language', table_name='prompt_templates')
    op.drop_index('ix_template_performance', table_name='prompt_templates')
    op.drop_index('ix_template_active_category', table_name='prompt_templates')
    op.drop_index('ix_template_ab_test', table_name='prompt_templates')
    op.drop_index(op.f('ix_prompt_templates_uuid'), table_name='prompt_templates')
    op.drop_index(op.f('ix_prompt_templates_primary_language'), table_name='prompt_templates')
    op.drop_index(op.f('ix_prompt_templates_is_active'), table_name='prompt_templates')
    op.drop_index(op.f('ix_prompt_templates_category'), table_name='prompt_templates')
    op.alter_column('prompt_templates', 'success_rate',
               existing_type=sa.Float(),
               type_=sa.VARCHAR(length=10),
               existing_nullable=True)
    op.alter_column('prompt_templates', 'default_temperature',
               existing_type=sa.Float(),
               type_=sa.VARCHAR(length=10),
               existing_nullable=True)
    op.drop_column('prompt_templates', 'last_used_at')
    op.drop_column('prompt_templates', 'optimization_suggestions')
    op.drop_column('prompt_templates', 'usage_patterns')
    op.drop_column('prompt_templates', 'performance_insights')
    op.drop_column('prompt_templates', 'changelog')
    op.drop_column('prompt_templates', 'documentation_url')
    op.drop_column('prompt_templates', 'template_metadata')
    op.drop_column('prompt_templates', 'tags')
    op.drop_column('prompt_templates', 'review_date')
    op.drop_column('prompt_templates', 'reviewed_by')
    op.drop_column('prompt_templates', 'review_status')
    op.drop_column('prompt_templates', 'collaboration_notes')
    op.drop_column('prompt_templates', 'access_roles')
    op.drop_column('prompt_templates', 'optimization_notes')
    op.drop_column('prompt_templates', 'last_optimization_date')
    op.drop_column('prompt_templates', 'optimization_score')
    op.drop_column('prompt_templates', 'optimization_status')
    op.drop_column('prompt_templates', 'parent_template_id')
    op.drop_column('prompt_templates', 'visibility')
    op.drop_column('prompt_templates', 'is_experimental')
    op.drop_column('prompt_templates', 'ab_test_results')
    op.drop_column('prompt_templates', 'ab_test_end_date')
    op.drop_column('prompt_templates', 'ab_test_start_date')
    op.drop_column('prompt_templates', 'ab_test_weight')
    op.drop_column('prompt_templates', 'ab_test_group')
    op.drop_column('prompt_templates', 'coherence_score')
    op.drop_column('prompt_templates', 'relevance_score')
    op.drop_column('prompt_templates', 'uniqueness_score')
    op.drop_column('prompt_templates', 'content_quality_score')
    op.drop_column('prompt_templates', 'cost_per_generation')
    op.drop_column('prompt_templates', 'conversion_rate')
    op.drop_column('prompt_templates', 'average_user_rating')
    op.drop_column('prompt_templates', 'average_generation_time')
    op.drop_column('prompt_templates', 'required_elements')
    op.drop_column('prompt_templates', 'prohibited_terms')
    op.drop_column('prompt_templates', 'min_output_length')
    op.drop_column('prompt_templates', 'max_output_length')
    op.drop_column('prompt_templates', 'output_format')
    op.drop_column('prompt_templates', 'content_guidelines')
    op.drop_column('prompt_templates', 'validation_rules')
    op.drop_column('prompt_templates', 'variable_types')
    op.drop_column('prompt_templates', 'provider_preferences')
    op.drop_column('prompt_templates', 'default_presence_penalty')
    op.drop_column('prompt_templates', 'default_frequency_penalty')
    op.drop_column('prompt_templates', 'default_top_p')
    op.drop_column('prompt_templates', 'content_style')
    op.drop_column('prompt_templates', 'personalization_level')
    op.drop_column('prompt_templates', 'urgency_level')
    op.drop_column('prompt_templates', 'tone')
    op.drop_column('prompt_templates', 'brand_personalities')
    op.drop_column('prompt_templates', 'price_ranges')
    op.drop_column('prompt_templates', 'product_categories')
    op.drop_column('prompt_templates', 'target_audience')
    op.drop_column('prompt_templates', 'context_tags')
    op.drop_column('prompt_templates', 'localization_notes')
    op.drop_column('prompt_templates', 'cultural_regions')
    op.drop_column('prompt_templates', 'supported_languages')
    op.drop_column('prompt_templates', 'primary_language')
    op.drop_column('prompt_templates', 'category')
    op.drop_column('prompt_templates', 'uuid')
    op.add_column('content_generation_stats', sa.Column('comparisons_generated', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('content_generation_stats', sa.Column('openai_usage', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('content_generation_stats', sa.Column('deepseek_usage', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('content_generation_stats', sa.Column('product_descriptions', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('content_generation_stats', sa.Column('faqs_generated', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint('uq_stats_date_period', 'content_generation_stats', type_='unique')
    op.drop_index('ix_stats_performance', table_name='content_generation_stats')
    op.drop_index('ix_stats_date_period', table_name='content_generation_stats')
    op.drop_index(op.f('ix_content_generation_stats_period_type'), table_name='content_generation_stats')
    op.alter_column('content_generation_stats', 'avg_user_rating',
               existing_type=sa.Float(),
               type_=sa.VARCHAR(length=10),
               existing_nullable=True)
    op.alter_column('content_generation_stats', 'avg_quality_score',
               existing_type=sa.Float(),
               type_=sa.VARCHAR(length=10),
               existing_nullable=True)
    op.alter_column('content_generation_stats', 'avg_generation_time_ms',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.drop_column('content_generation_stats', 'last_calculated')
    op.drop_column('content_generation_stats', 'benchmark_comparison')
    op.drop_column('content_generation_stats', 'year_over_year_change')
    op.drop_column('content_generation_stats', 'period_over_period_change')
    op.drop_column('content_generation_stats', 'optimization_opportunities')
    op.drop_column('content_generation_stats', 'anomalies_detected')
    op.drop_column('content_generation_stats', 'performance_insights')
    op.drop_column('content_generation_stats', 'trend_analysis')
    op.drop_column('content_generation_stats', 'capacity_utilization')
    op.drop_column('content_generation_stats', 'error_rate_by_type')
    op.drop_column('content_generation_stats', 'avg_system_response_time')
    op.drop_column('content_generation_stats', 'system_uptime_percentage')
    op.drop_column('content_generation_stats', 'avg_coherence_score')
    op.drop_column('content_generation_stats', 'avg_relevance_score')
    op.drop_column('content_generation_stats', 'avg_uniqueness_score')
    op.drop_column('content_generation_stats', 'content_flagged_rate')
    op.drop_column('content_generation_stats', 'content_flagged_count')
    op.drop_column('content_generation_stats', 'user_retention_rate')
    op.drop_column('content_generation_stats', 'avg_generations_per_user')
    op.drop_column('content_generation_stats', 'unique_sessions')
    op.drop_column('content_generation_stats', 'unique_users')
    op.drop_column('content_generation_stats', 'revenue_per_generation')
    op.drop_column('content_generation_stats', 'total_conversion_value')
    op.drop_column('content_generation_stats', 'conversion_rate')
    op.drop_column('content_generation_stats', 'cost_efficiency_score')
    op.drop_column('content_generation_stats', 'avg_cost_per_generation')
    op.drop_column('content_generation_stats', 'total_cost_usd')
    op.drop_column('content_generation_stats', 'avg_tokens_per_generation')
    op.drop_column('content_generation_stats', 'total_tokens_used')
    op.drop_column('content_generation_stats', 'p95_generation_time_ms')
    op.drop_column('content_generation_stats', 'median_generation_time_ms')
    op.drop_column('content_generation_stats', 'language_performance')
    op.drop_column('content_generation_stats', 'region_breakdown')
    op.drop_column('content_generation_stats', 'language_breakdown')
    op.drop_column('content_generation_stats', 'content_type_performance')
    op.drop_column('content_generation_stats', 'content_type_breakdown')
    op.drop_column('content_generation_stats', 'provider_costs')
    op.drop_column('content_generation_stats', 'provider_performance')
    op.drop_column('content_generation_stats', 'provider_usage')
    op.drop_column('content_generation_stats', 'success_rate')
    op.add_column('ai_generated_content', sa.Column('quality_score', sa.VARCHAR(length=10), autoincrement=False, nullable=True))
    op.drop_constraint(op.f('fk_ai_generated_content_template_id_prompt_templates'), 'ai_generated_content', type_='foreignkey')
    op.drop_constraint(op.f('fk_ai_generated_content_adaptation_id_cultural_adaptations'), 'ai_generated_content', type_='foreignkey')
    op.drop_index('ix_generation_user_session', table_name='ai_generated_content')
    op.drop_index('ix_generation_template_success', table_name='ai_generated_content')
    op.drop_index('ix_generation_performance', table_name='ai_generated_content')
    op.drop_index('ix_generation_language_region', table_name='ai_generated_content')
    op.drop_index('ix_generation_ab_test', table_name='ai_generated_content')
    op.drop_index(op.f('ix_ai_generated_content_uuid'), table_name='ai_generated_content')
    op.drop_index(op.f('ix_ai_generated_content_success'), table_name='ai_generated_content')
    op.drop_index(op.f('ix_ai_generated_content_session_id'), table_name='ai_generated_content')
    op.drop_index(op.f('ix_ai_generated_content_language_requested'), table_name='ai_generated_content')
    op.drop_index(op.f('ix_ai_generated_content_cultural_region'), table_name='ai_generated_content')
    op.alter_column('ai_generated_content', 'temperature',
               existing_type=sa.Float(),
               type_=sa.VARCHAR(length=10),
               existing_nullable=True)
    op.drop_column('ai_generated_content', 'reviewed_at')
    op.drop_column('ai_generated_content', 'updated_at')
    op.drop_column('ai_generated_content', 'review_notes')
    op.drop_column('ai_generated_content', 'human_reviewer')
    op.drop_column('ai_generated_content', 'reviewed_by_human')
    op.drop_column('ai_generated_content', 'flag_reasons')
    op.drop_column('ai_generated_content', 'flagged_content')
    op.drop_column('ai_generated_content', 'content_categories')
    op.drop_column('ai_generated_content', 'keyword_density')
    op.drop_column('ai_generated_content', 'complexity_score')
    op.drop_column('ai_generated_content', 'readability_score')
    op.drop_column('ai_generated_content', 'sentiment_score')
    op.drop_column('ai_generated_content', 'ab_test_experiment_id')
    op.drop_column('ai_generated_content', 'ab_test_variant')
    op.drop_column('ai_generated_content', 'ab_test_group')
    op.drop_column('ai_generated_content', 'time_to_conversion')
    op.drop_column('ai_generated_content', 'conversion_value')
    op.drop_column('ai_generated_content', 'converted')
    op.drop_column('ai_generated_content', 'conversion_tracked')
    op.drop_column('ai_generated_content', 'ip_address')
    op.drop_column('ai_generated_content', 'user_agent')
    op.drop_column('ai_generated_content', 'user_id')
    op.drop_column('ai_generated_content', 'creativity_score')
    op.drop_column('ai_generated_content', 'coherence_score')
    op.drop_column('ai_generated_content', 'relevance_score')
    op.drop_column('ai_generated_content', 'uniqueness_score')
    op.drop_column('ai_generated_content', 'content_quality_score')
    op.drop_column('ai_generated_content', 'error_type')
    op.drop_column('ai_generated_content', 'cost_estimate')
    op.drop_column('ai_generated_content', 'total_tokens')
    op.drop_column('ai_generated_content', 'completion_tokens')
    op.drop_column('ai_generated_content', 'prompt_tokens')
    op.drop_column('ai_generated_content', 'post_processing_applied')
    op.drop_column('ai_generated_content', 'adaptations_applied')
    op.drop_column('ai_generated_content', 'generation_config')
    op.drop_column('ai_generated_content', 'presence_penalty')
    op.drop_column('ai_generated_content', 'frequency_penalty')
    op.drop_column('ai_generated_content', 'top_p')
    op.drop_column('ai_generated_content', 'custom_variables')
    op.drop_column('ai_generated_content', 'target_audience')
    op.drop_column('ai_generated_content', 'context_tags')
    op.drop_column('ai_generated_content', 'cultural_region')
    op.drop_column('ai_generated_content', 'language_requested')
    op.drop_column('ai_generated_content', 'alternatives_considered')
    op.drop_column('ai_generated_content', 'selection_score')
    op.drop_column('ai_generated_content', 'selection_criteria')
    op.drop_column('ai_generated_content', 'adaptation_id')
    op.drop_column('ai_generated_content', 'uuid')
    # ### end Alembic commands ### 