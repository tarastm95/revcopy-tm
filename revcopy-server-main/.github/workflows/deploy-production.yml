name: 🚀 Deploy to Production Server
on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      deployment_type:
        description: 'Deployment Type'
        required: true
        default: 'update'
        type: choice
        options:
        - update
        - full
        - cleanup
      enable_ssl:
        description: 'Enable SSL Setup'
        required: false
        default: false
        type: boolean
      enable_monitoring:
        description: 'Enable Monitoring Setup'
        required: false
        default: false
        type: boolean

env:
  SERVER_HOST: 37.27.217.240
  DEPLOYMENT_PATH: /opt/revcopy
  PYTHON_VERSION: '3.11'

jobs:
  deploy:
    name: 🌐 Deploy RevCopy Infrastructure
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
    
    - name: 📦 Install CLI Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-cli.txt
    
    - name: 🔐 Setup SSH Key
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}
    
    - name: 🏥 Pre-deployment Health Check
      run: |
        python revcopy-cli.py health --server ${{ env.SERVER_HOST }}
      continue-on-error: true
    
    - name: 🚀 Deploy Infrastructure
      run: |
        deployment_type="${{ github.event.inputs.deployment_type || 'update' }}"
        ssl_flag=""
        monitoring_flag=""
        
        if [[ "${{ github.event.inputs.enable_ssl }}" == "true" ]]; then
          ssl_flag="--ssl"
        fi
        
        if [[ "${{ github.event.inputs.enable_monitoring }}" == "true" ]]; then
          monitoring_flag="--monitoring"
        fi
        
        if [[ "$deployment_type" == "full" ]]; then
          python revcopy-cli.py deploy --server ${{ env.SERVER_HOST }} --full $ssl_flag $monitoring_flag
        elif [[ "$deployment_type" == "cleanup" ]]; then
          python revcopy-cli.py cleanup --server ${{ env.SERVER_HOST }}
        else
          python revcopy-cli.py deploy --server ${{ env.SERVER_HOST }} $ssl_flag $monitoring_flag
        fi
    
    - name: 🏥 Post-deployment Health Check
      run: |
        sleep 60  # Wait for services to stabilize
        python revcopy-cli.py health --server ${{ env.SERVER_HOST }}
    
    - name: 📊 Upload Deployment Logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: deployment-logs-${{ github.run_number }}
        path: |
          deployment.log
          deployment-summary.txt
        retention-days: 30
    
    - name: 🔔 Notify Deployment Success
      if: success()
      uses: 8398a7/action-slack@v3
      with:
        status: success
        text: |
          🎉 RevCopy deployment completed successfully!
          
          📍 Server: ${{ env.SERVER_HOST }}
          🔄 Type: ${{ github.event.inputs.deployment_type || 'update' }}
          🌐 Frontend: https://${{ env.SERVER_HOST }}
          🔧 Admin: https://${{ env.SERVER_HOST }}/admin
          📊 API: https://${{ env.SERVER_HOST }}/api
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
      continue-on-error: true
    
    - name: 🚨 Notify Deployment Failure
      if: failure()
      uses: 8398a7/action-slack@v3
      with:
        status: failure
        text: |
          ❌ RevCopy deployment failed!
          
          📍 Server: ${{ env.SERVER_HOST }}
          🔍 Check logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
      continue-on-error: true

  security-scan:
    name: 🛡️ Security Scan
    runs-on: ubuntu-latest
    needs: deploy
    if: success()
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
    
    - name: 🔍 Run Security Scan
      uses: securecodewarrior/github-action-add-sarif@v1
      with:
        sarif-file: 'security-scan.sarif'
      continue-on-error: true
    
    - name: 🌐 Check SSL Certificate
      run: |
        echo "🔒 Checking SSL certificate for ${{ env.SERVER_HOST }}"
        timeout 10 openssl s_client -connect ${{ env.SERVER_HOST }}:443 -servername ${{ env.SERVER_HOST }} < /dev/null
      continue-on-error: true

  performance-test:
    name: ⚡ Performance Test
    runs-on: ubuntu-latest
    needs: deploy
    if: success()
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
    
    - name: 🏃 Load Testing
      run: |
        # Install Apache Bench
        sudo apt-get update
        sudo apt-get install -y apache2-utils
        
        echo "🚀 Running performance tests..."
        
        # Test main endpoints
        ab -n 100 -c 10 https://${{ env.SERVER_HOST }}/
        ab -n 50 -c 5 https://${{ env.SERVER_HOST }}/api/health
        
        echo "✅ Performance tests completed"
      continue-on-error: true 